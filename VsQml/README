
== Static build of Qt

This project requires an x86 static build of Qt that includes at least qtbase and qtdeclarative.

By default, it will look for the Qt build three levels higher in the file system hierarchy, in
"build\qt5-x86-<VS Version>-static", where <VS Version> is either "vs2019" or "vs2022".

For example, when building in Visual Studio 2019, if the Qt VS Tools solution is located in
X:\dev\vstools (and therefore vsqml is located in X:\dev\vstools\src\vsqml), the project will look
for the static build of Qt in X:\dev\build\qt5-x86-vs2019-static.

It is also possible to override the default Qt build location by setting the following environment
variables:
    QTBUILD_STATIC_VS2019 = <path to x86 static build of Qt for Visual Studio 2019>
    QTBUILD_STATIC_VS2022 = <path to x64 static build of Qt for Visual Studio 2022>

The following configure options can be used to obtain an optimized build configuration:

    -opensource -static -nomake examples -nomake tests -opengl desktop -skip qt3d -skip qtactiveqt
    -skip qtcanvas3d -skip qtwebchannel -skip qtwebglplugin -skip qtwebsockets -skip qtwebview
    -skip qtpurchasing -skip qtandroidextras -skip qtconnectivity -skip qtdatavis3d -skip qtfeedback
    -skip qtgamepad -skip qtgraphicaleffects -skip qtimageformats -skip qtmultimedia
    -skip qtnetworkauth -skip qtpim -skip qtremoteobjects -skip qtrepotools -skip qtsensors
    -skip qtserialbus -skip qtserialport -skip qtspeech -skip qtsvg -skip qttranslations
    -skip qtvirtualkeyboard -skip qtwayland -skip qtcharts -skip qtlocation -skip qtmacextras
    -skip qtqa -skip qtquickcontrols -skip qtscript -skip qtscxml -skip qttools -skip qtwinextras
    -skip qtx11extras -skip qtxmlpatterns


== Project output

The output DLL is copied to a bin sub-folder inside the project directory
(e.g. X:\dev\vstools\vsqml\bin). This is the location where the VS Tools project will look for it.
