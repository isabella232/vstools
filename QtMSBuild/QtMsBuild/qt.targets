<?xml version="1.0" encoding="utf-8"?>
<!--
/***************************************************************************************************
 Copyright (C) 2024 The Qt Company Ltd.
 SPDX-License-Identifier: LicenseRef-Qt-Commercial OR LGPL-3.0-only OR GPL-2.0-only OR GPL-3.0-only
***************************************************************************************************/
-->

<!--
///////////////////////////////////////////////////////////////////////////////////////////////////
// Qt/MSBuild
// -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Fail-safe import of private definitions
  // -->
  <Import
    Condition="'$(QtPrivateLoaded)' != 'true'"
    Project="$(MSBuildThisFileDirectory)\qt_private.props"/>

  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Defaults for project version constants
  // -->
  <PropertyGroup>
    <QtVsProjectVersion
      Condition="'$(QtVsProjectVersion)' == ''"
      >0</QtVsProjectVersion>
    <QtVsProjectMinVersion_Settings
      Condition="'$(QtVsProjectMinVersion_Settings)' == ''"
      >0</QtVsProjectMinVersion_Settings>
    <QtVsProjectMinVersion_ClProperties
      Condition="'$(QtVsProjectMinVersion_ClProperties)' == ''"
      >0</QtVsProjectMinVersion_ClProperties>
  </PropertyGroup>

  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Qt Variables Expansion
  // -->
  <PropertyGroup Condition="'$(QtVsProjectSettings)' == 'true'">

    <!--// Path to Qt variables property file -->
    <QtVarsOutputDir Condition="'$(QtVarsOutputDir)' == ''"
      >$([System.IO.Path]::Combine('$(ProjectDir)', '$(IntDir)', 'qmake'))</QtVarsOutputDir>
    <QtVarsFileName Condition="'$(QtVarsFileName)' == ''"
      >qtvars_$(Platform.Replace(' ','_'))_$(Configuration.Replace(' ','_')).props</QtVarsFileName>
    <QtVarsFilePath Condition="'$(QtVarsFilePath)' == ''"
      >$(QtVarsOutputDir)\$(QtVarsFileName)</QtVarsFilePath>

    <!--// Path to temp work folder -->
    <QtVarsWorkDirName
      >temp</QtVarsWorkDirName>
    <QtVarsWorkDir
      >$([System.IO.Path]::Combine('$(QtVarsOutputDir)','$(QtVarsWorkDirName)'))</QtVarsWorkDir>
    <QtVarsWorkPath
      >$(QtVarsWorkDir)\$(QtVarsFileName)</QtVarsWorkPath>
    <QtVarsIndexPathDesignTime
      >$(QtVarsWorkDir)\$(ProjectGuid.Replace('{','').Replace('}','')).$(ProjectName).designtime.idx</QtVarsIndexPathDesignTime>
    <QtVarsDesignTime Condition="Exists('$(QtVarsIndexPathDesignTime)')"
      >$([System.String]::Copy($([System.IO.File]::ReadAllText('$(QtVarsIndexPathDesignTime)'))).Replace('&#xD;&#xA;',''))</QtVarsDesignTime>
  </PropertyGroup>

  <PropertyGroup>
    <!--// Path to Qt variables .props: full build -->
    <QtVarsImportPath
      Condition="'$(QtDesignTimeBuild)' != 'true'
        AND Exists('$(QtVarsFilePath)')"
      >$(QtVarsFilePath)</QtVarsImportPath>

    <!--// Path to Qt variables .props: design-time build -->
    <QtVarsImportPath
      Condition="'$(QtDesignTimeBuild)' == 'true'
        AND Exists('$(QtVarsDesignTime)')"
      >$(QtVarsDesignTime)</QtVarsImportPath>

    <!--// Path to Qt variables .props: fall-back -->
    <QtVarsImportPath
      Condition="'$(QtDesignTimeBuild)' == 'true'
        AND !Exists('$(QtVarsDesignTime)')
        AND  Exists('$(QtVarsFilePath)')"
      >$(QtVarsFilePath)</QtVarsImportPath>
  </PropertyGroup>

  <!--// Import Qt vars property file -->
  <Import Condition="Exists('$(QtVarsImportPath)')" Project="$(QtVarsImportPath)"/>

  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Check static plugin import:
  //  * If qmake generated a platform plugin import, assume QML plugins are also required.
  // -->
  <PropertyGroup Condition="Exists('$(QtVarsWorkDir)\qtvars_plugin_import.cpp')">
    <QtStaticPlugins>true</QtStaticPlugins>
  </PropertyGroup>

  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Qt Common Targets
  // -->
  <Import Project="qt_globals.targets"/>
  <Import Project="qt_settings.targets"/>
  <Import Project="qt_tasks.targets"/>
  <Import Project="qt_vars.targets"/>

  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Import subfolder targets
  // -->
  <Import
    Project="$(QtMsBuildTargets)"/>

</Project>
