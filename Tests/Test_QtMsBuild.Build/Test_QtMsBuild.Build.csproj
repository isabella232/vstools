<?xml version="1.0" encoding="utf-8"?>
<!--
***************************************************************************************************
 Copyright (C) 2024 The Qt Company Ltd.
 SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only WITH Qt-GPL-exception-1.0
***************************************************************************************************
-->
<Project ToolsVersion="$(VisualStudioVersion)" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <!-- Sets property TargetFrameworkVersion and LangVersion -->
  <Import Condition="Exists('$(SolutionDir)\targetframework.props')" Project="$(SolutionDir)\targetframework.props" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{D90720E3-0D5E-42A3-90DE-A5265EA22F80}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Test_QtMsBuild.Build</RootNamespace>
    <AssemblyName>Test_QtMsBuild.Build</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">16.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Global references
  // -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // General package references
  // -->
  <Import Condition="Exists('$(SolutionDir)\references.props')" Project="$(SolutionDir)\references.props" />
  <ItemGroup>
    <PackageReference Include="$(Name_MSTest_TestAdapter)" Version="$(Version_MSTest_TestAdapter)" />
    <PackageReference Include="$(Name_MSTest_TestFramework)" Version="$(Version_MSTest_TestFramework)" />
    <PackageReference Include="$(Name_Microsoft_Build)" Version="$(MSBuildVersion)" />
    <PackageReference Include="$(Name_Microsoft_Build_Framework)" Version="$(MSBuildVersion)" />
    <PackageReference Include="$(Name_Microsoft_Build_Tasks_Core)" Version="$(MSBuildVersion)" />
    <PackageReference Include="$(Name_Microsoft_Build_Utilities_Core)" Version="$(MSBuildVersion)" />
  </ItemGroup>
  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Version specific package references
  // -->
  <Choose>
    <When Condition="'$(VisualStudioVersion)'=='17.0'">
      <ItemGroup>
      </ItemGroup>
    </When>
    <When Condition="'$(VisualStudioVersion)'=='16.0'">
      <ItemGroup>
      </ItemGroup>
    </When>
  </Choose>
  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Solution project references
  // -->
  <ItemGroup>
    <ProjectReference Include="..\..\QtMSBuild\QtMSBuild.csproj">
      <Project>{a618d28b-9352-44f4-aa71-609bf68bf871}</Project>
      <Name>QtMSBuild</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\QtVsTools.Core\QtVsTools.Core.csproj">
      <Project>{2621ad55-c4e9-4884-81e9-da0d00b4c6e5}</Project>
      <Name>QtVsTools.Core</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\QtVsTools.RegExpr\QtVsTools.RegExpr.csproj">
      <Project>{a2831b9b-4d3b-46cb-85df-1b5c277c17db}</Project>
      <Name>QtVsTools.RegExpr</Name>
    </ProjectReference>
  </ItemGroup>
  <!--
  /////////////////////////////////////////////////////////////////////////////////////////////////
  // Project items
  // -->
  <ItemGroup>
    <Compile Include="AssemblyResolver.cs" />
    <Compile Include="BigSolution.cs" />
    <Compile Include="Logger.Format.cs" />
    <Compile Include="Logger.Views.cs" />
    <Compile Include="TempProject.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Logger.cs" />
    <Compile Include="MsBuild.cs" />
    <Compile Include="Test_BigSolution.cs" />
    <Compile Include="Test_QmlStatic.cs" />
    <Compile Include="Test_IntDir.cs" />
    <Compile Include="Test_LateBinding.cs" />
    <Compile Include="Test_Eval.cs" />
    <Compile Include="Test_Build.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="$(SolutionDir)\EvalProps.cs">
      <Link>EvalProps.cs</Link>
    </Compile>
  </ItemGroup>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Condition="Exists('$(SolutionDir)\transform.targets')" Project="$(SolutionDir)\transform.targets" />
  <Import Condition="Exists('$(SolutionDir)\EvalProps.targets')" Project="$(SolutionDir)\EvalProps.targets" />
</Project>