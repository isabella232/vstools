Qt Visual Studio Tools version 3.3.0:

This update to the Qt VS Tools extension introduces experimental support for the Visual Studio test
adapter for the Qt Test framework. It also introduces an improved and more streamlined build process
with Qt/MSBuild.

Changes
-------
  - Separate binary directories for debug and release in CMake projects
  - Updated several types in natvis visualizer
  - Redesign the layout of the Qt version page
  - Implement project and item wizard for QtTest adapter
  - Implement Visual Studio test adapter for QtTest framework
  - Refactor Qt/MSBuild
 - Fixed QTVSADDINBUG-1173: Fix linking of QML plugin dependencies in static builds
 - Fixed QTVSADDINBUG-1209: Fix Qt include path not being passed to MOC
 - Fixed QTVSADDINBUG-1211: Add Qt SVG Widgets to qt6modules.xml
 - Fixed QTVSADDINBUG-1088: Store settings and versions per root suffix
 - Fixed QTVSADDINBUG-1080: Enable adding Qt versions by using qtpaths.exe
 - Fixed QTVSADDINBUG-1163: Fix autodetection detects incompatible Qt versions
 - Fixed QTVSADDINBUG-1192: Fix locals not being populated during QML debugging
 - Fixed QTVSADDINBUG-1078: Move QtVarsOutputDir to $(Temp)/$(ProjectGuid)/$(QtProjectDirHash)/qmake
 - Fixes QTVSADDINBUG-962:  Add IDC integration to Qt/MSBuild
 - Fixes QTVSADDINBUG-1204: Fix hang when process debug events is false and QML debugging is true
 - Fixed QTVSADDINBUG-1199: Remove ARM64 build dependency to Microsoft.Build.Utilities.Core.dll
 - Fixed QTVSADDINBUG-1197: Revert QtVarsOutputDir to $(ProjectDir)\$(IntDir)\qmake
 - Fixed QTVSADDINBUG-1196: Fix storing Qt version names with spaces


Qt Visual Studio Tools version 3.2.0:

This update of the Qt VS Tools extension adds experimental QML LSP server, disabled by default.
The update also introduces additional settings to provide more fine-grained control over the
notification behavior of the Qt Visual Studio Tools extension.
Furthermore we will now provide the QtMsBuild files as separate ZIP file from our download server.

Rev. 43
-------
 - Fixed QTVSADDINBUG-1195: User settings not migrated after upgrading to version 3.2.0
 - Fixed QTVSADDINBUG-905: Support for user-defined MOC macros

Changes
-------
 - Extended QML LSP server support, with stream monitoring and additional file logging
 - Updated VS interface of Qt command line tools to match Qt 6.6.1
 - Provide QtMsBuild as a standalone distribution in ZIP file format
 - Searching for dev releases is now an opt-in (Notification item)
 - Add option for activating the console pane on new messages (Notification item)
 - Inform user if project Qt installation property is invalid (Notification item)
 - Fixed QTVSADDINBUG-1191: Enable batching of CL calls for dynamic sources
 - Fixed QTVSADDINBUG-987: Correct conversion of moc_predef steps and set output path to $(IntDir)
 - Fixed QTVSADDINBUG-779 and QTVSADDINBUG-1157: Add QtMSBuild stand-alone distribution
 - Fixed QTVSADDINBUG-1148: Replace QtBkup_* and QtCleaned_* comparisons with hash comparisons
 - Fixed QTVSADDINBUG-347: Unify precompiled header support, now settable on the configuration page
 - Fixed QTVSADDINBUG-1132: Inform user if project Qt installation property is invalid
 - Fixed QTVSADDINBUG-1184: Add option for activating the console pane on new messages
 - Fixed QTVSADDINBUG-885: Add default stylesheet setting the size of embedded editor widgets
 - Fixed QTVSADDINBUG-1060 and QTVSADDINBUG-862: Add dark mode and stylesheet support for editors
 - Fixed QTVSADDINBUG-959: Use VS embedded info bar to show the detach option of editors
 - Fixed QTVSADDINBUG-1182: Ensure non-empty filename prior to getting directory in file validation
 - Fixed QTVSADDINBUG-1172: Move Qt variables expansion from qt.targets to qt_private.props
 - Fixed QTVSADDINBUG-935: Avoid modifying .vcxproj.user
 - Fixed QTVSADDINBUG-528: Enable file wizards to accept relative paths
 - Fixed QTVSADDINBUG-1162: Qt Quick project creation with Qt 5 and CMake
 - Fixed QTVSADDINBUG-989: MultiToolTask on VS 2019 failed unexpectedly
 - Fixed QTVSADDINBUG-1179: Change source license to LicenseRef-Qt-Commercial or GPL-3.0-only
 - Fixed QTVSADDINBUG-1158: Properly recognize QMake extra arguments
 - Fixed QTVSADDINBUG-992: RCC failure when using precompiled headers and /W4 /WX
 - Fixes QTVSADDINBUG-1055: Support Qt VS Tools on ARM64
 - Fixes QTVSADDINBUG-807: Unify the project settings for standard VS and Qt templates
 - Fixed QTVSADDINBUG-1160: Open source files in CMake projects after project creation
 - Fixed QTVSADDINBUG-1159: Update more templates for Qt/CMake
 - Fixed QTVSADDINBUG-1164: Add QTDIR to PATH when debugging


Qt Visual Studio Tools version 3.1.0:

Changes
-------
 - Cleanup of non-existent Qt versions
 - Integration with QML LSP server (experimental, disabled by default)
 - Fixed QTVSADDINBUG-860: Intermediate directory ignored
 - Fixed QTVSADDINBUG-872: Intermediate directory ignored
 - Fixed QTVSADDINBUG-899: UNICODE macro set by default but not compatible withÂ QApplication
 - Fixed QTVSADDINBUG-921: Timeout waiting for Qt::BuildLock
 - Fixed QTVSADDINBUG-1022: Cannot add Qt version to the Qt VS Tools
 - Fixed QTVSADDINBUG-1081: Locate installer-provided Qt installation
 - Fixed QTVSADDINBUG-1089: Project always rebuilds
 - Fixed QTVSADDINBUG-1092: Semicolon in Qt settings causes project to compile
 - Fixed QTVSADDINBUG-1095: vcvars.bat not called before windeployqt
 - Fixed QTVSADDINBUG-1097: Temp path in Qt_INCLUDEPATH_ causes project to compile
 - Fixed QTVSADDINBUG-1124: moc fails if source path contains spaces
 - Fixed QTVSADDINBUG-1134: The Qt Deploy Tool doesn't take the given arguments
 - Fixed QTVSADDINBUG-1135: Running an application built using an imported cmakelists.txt hangs
 - Fixed QTVSADDINBUG-1137: Private headers broken
 - Fixed QTVSADDINBUG-1138: Object properties not shown in QML debugger
 - Fixed QTVSADDINBUG-1142: core and gui modules are always available
 - Fixed QTVSADDINBUG-1145: Qt license header in generated projects


Qt Visual Studio Tools version 3.0.2:

This major update of the Qt VS Tools extension adds support for Qt-enabled CMake projects, and drops
support for legacy Qt projects based on custom build steps.

Changes
-------

 - Fix importing a project with no filters or solution file
 - Fix null reference exception while converting a Win32Proj project
 - Fixed QTVSADDINBUG-409: Enable item wizards for cmake based projects
 - Fixed QTVSADDINBUG-960: In the new-project wizard, allow to select a unregistered Qt version
 - Fixed QTVSADDINBUG-1133: Add option to not show Qt/CMake notifications
 - Fixed QTVSADDINBUG-1133: Preserve existing CMake presets
 - Fixed QTVSADDINBUG-1127: Fix cmd parser duplicating values as free args
 - Fixed QTVSADDINBUG-1113: Fix broken .vcxproj when auto-generating .qrc files
 - Fixed QTVSADDINBUG-1126: Properly filter the list of Qt modules used in the project

Qt Visual Studio Tools version 3.0.1:

Changes
-------
 - Better legacy package detection
 - Fixed QTVSADDINBUG-1122: Describe selecting Qt versions for CMake projects
 - Fixed QTVSADDINBUG-1121: Update CMake presets when Qt versions are modified
 - Fixed QTVSADDINBUG-1093: Wizard adding new .cpp and .h files under wrong section

Qt Visual Studio Tools version 3.0.0:

Changes
-------
 - Support for Qt/CMake projects
 - QML debugging with non-MSBuild projects (e.g. Qt/CMake)
 - Initialize extension in background task
 - Load Qt version information at initialization
 - Remove support for Qt projects with custom build steps for moc, etc.
 - Project format conversion report
 - Legacy project solution filter
 - Drop support for VS 2017
 - Update VS 2022 support target to 17.4 LTS
 - Update and add some more icons to the Qt extension menu
 - Snippet to add a Q_PROPERTY to a class
 - Fixed QTVSADDINBUG-27: Should have a button to convert a "regular" vcproj to a Qt-enabled vcproj
 - Fixed QTVSADDINBUG-408: Duplicate .ts file sections added when importing Qt's .pro file
 - Fixed QTVSADDINBUG-562: Import .pri File to project, filename case not respected
 - Fixed QTVSADDINBUG-833: The new project wizards, page 2 (configuration), has glitches
 - Fixed QTVSADDINBUG-880: Make Qt Deploy properties Persistence to ProjectFile instead of User
 - Fixed QTVSADDINBUG-991: Provide up-to-date Qt 6 Natvis debugging helpers for Visual Studio
 - Fixed QTVSADDINBUG-1000: Make "Qt Deploy Tool" a static page
 - Fixed QTVSADDINBUG-1033: lupdate doesn't update my .ts files anymore
 - Fixed QTVSADDINBUG-1077: Upgrading format results in multiple MultiProcessorCompilation entries
 - Fixed QTVSADDINBUG-1084: Removed Qt version re-appears after setting default version
 - Fixed QTVSADDINBUG-1087: "required" keyword breaks syntax highlighting
 - Fixed QTVSADDINBUG-1092: Last semicolon in qt modules causes the whole project to compile
 - Fixed QTVSADDINBUG-1108: Names of plugin header and source files don't update
 - Fixed QTVSADDINBUG-1110: QtMultimediaWidgets is not on the list of components


Qt Visual Studio Tools version 2.10.0:

Changes
-------
 - Show notification when a project with old format is loaded
 - Unify online help search behavior
 - Add support for shadow builds of Qt
 - Fixed QTVSADDINBUG-938: Can't add Qt Version for MSVC_ARM
 - Fixed QTVSADDINBUG-999: LNK2019 for Qt Quick application with static Qt builds
 - Fixed QTVSADDINBUG-1005: Issues with "Remove Qt Version" button
 - Fixed QTVSADDINBUG-1008: Build failed in projects with non-default Intermediate Directory
 - Fixed QTVSADDINBUG-1012: Importing .pro files fails
 - Fixed QTVSADDINBUG-1014: Missing QtVersionMajor macro
 - Fixed QTVSADDINBUG-1015: The VS Plugin is ignoring webenginewidgets
 - Fixed QTVSADDINBUG-1017: v2.9.1.1 Prevents ability to see contents of QString during debugging
 - Fixed QTVSADDINBUG-1027: RuntimeLibrary metadata of ClCompile not flowing from qmake
 - Fixed QTVSADDINBUG-1031: Start debugging but application window does not appear
 - Fixed QTVSADDINBUG-1058: Options dialog changes to unrelated page on error
 - Fixed QTVSADDINBUG-1059: Qt Versions page crashes Visual Studio
 - Fixed QTVSADDINBUG-1061: QtDllPath conflicts with Qt binaries in other applications
 - Fixed QTVSADDINBUG-1064: Add a visual confirmation that mingw build of Qt is not supported
 - Fixed QTVSADDINBUG-1065: QUuid does not have a natvis in Qt5 or Qt6
 - Fixed QTVSADDINBUG-1067: Projectnames with Space(s) have no Filters
 - Fixed QTVSADDINBUG-1068: natvis support for QQuickItem
 - Fixed QTVSADDINBUG-1071: Opening the attached .pro file in VS 2022 fails to convert to solution
 - Fixed QTVSADDINBUG-1072: Module openglwidgets ignored
 - Fixed QTVSADDINBUG-1073: QML debugger fails to connect


Qt Visual Studio Tools version 2.9.0:

Changes
-------
 - Added QStringRef and QStringView debug visualizers
 - Check if Qt translation tools are available
 - New widget class wizards accessible from "Add New Item"
 - New Qt class wizards accessible from "Add New Item"
 - InfoBar notification of missing Qt installation
 - InfoBar notification of recently installed new Qt VS Tools version
 - Additional compiler options from Qt included in the build
 - Enabled reporting issues and feature requests via GitHub
 - Debug visualizer for Qt types added to PDB
 - Improved intellisense performance for Qt projects
- Fixed QTVSADDINBUG-626: Qt VS Tools does not generate the same code as Qt Creator
- Fixed QTVSADDINBUG-707: Integrating the main window widget into the Qt Gui application wizard.
- Fixed QTVSADDINBUG-884: QStringRef and QStringView have no natvis definitions
- Fixed QTVSADDINBUG-925: Can't add an "add-on" module to project using GUI
- Fixed QTVSADDINBUG-937: OpenGL Widgets module missing
- Fixed QTVSADDINBUG-951: Can't build QT6 WebEngine example
- Fixed QTVSADDINBUG-965: Pragma warning not working with "external header warning level" option
- Fixed QTVSADDINBUG-966: Debug version of Qt Dlls are linked even if we asked for release mode
- Fixed QTVSADDINBUG-970: Qt6 in Visual Studio plugin doesn't load qmake projects
- Fixed QTVSADDINBUG-972: VS Plugin is ignoring module core5compat when loading project with QT6
- Fixed QTVSADDINBUG-973: unable to add a new qt version with visual studio 2022
- Fixed QTVSADDINBUG-979: Project Properties are overwritten by Qt Vs Tools
- Fixed QTVSADDINBUG-980: The "Release Notes" link does not work
- Fixed QTVSADDINBUG-982: Can't add new Qt Version



Qt Visual Studio Tools version 2.8.1:

Changes
-------
 - Fixed QTVSADDINBUG-340: QML files are not updated with lupdate
 - Fixed QTVSADDINBUG-431: Difficult to find feature to change Qt Version
 - Fixed QTVSADDINBUG-801, QTVSADDINBUG-498: Error in qt5.natvis: "identifier "$T1" is undefined"
 - Fixed QTVSADDINBUG-628: Change Qt Project settings lead to an error message
 - Fixed QTVSADDINBUG-659: Missing Qurl debug visualizer
 - Fixed QTVSADDINBUG-700: In debug, a QStandardItem will not be resolved unless inside the class
 - Fixed QTVSADDINBUG-701: "Qt Project Settings" incorrect behavior
 - Fixed QTVSADDINBUG-831: Error creating new Qt project when "application icon" option is enabled
 - Fixed QTVSADDINBUG-883: Background build error when using common props file
 - Fixed QTVSADDINBUG-919: Missing QML/QtQuick plugins when using a static Qt build
 - Fixed QTVSADDINBUG-924: New Qt projects use C++14 standard by default
 - Fixed QTVSADDINBUG-926: Qt module selection can't be confirmed
 - Fixed QTVSADDINBUG-930: "Finish" button always disabled in Qt Class Wizard
 - Fixed QTVSADDINBUG-936: Generated C++ source file fails to compile with precompiled header
 - Fixed QTVSADDINBUG-941: "Translation disabled during build; skipping"
 - Fixed QTVSADDINBUG-943: Document Qt 6 Support
 - Fixed QTVSADDINBUG-950: Get Qt build settings from 'vcapp' qmake template
 - Fixed QTVSADDINBUG-952: lupdate is not run during build


Qt Visual Studio Tools version 2.8.0:

Changes
-------
 - Added support for Visual Studio 2022
 - Fixed QTVSADDINBUG-927: Post-build refresh of IntelliSense data slows down/freezes the VS IDE


Qt Visual Studio Tools version 2.7.2:

Changes
-------
  - Fixed QTVSADDINBUG-805: Q_NAMESPACE needs mocing
  - Fixed QTVSADDINBUG-871: lupdate/lrelease not working on .ts file context menu
  - Fixed QTVSADDINBUG-873: Update list of Qt modules
  - Fixed QTVSADDINBUG-874: Add option to open Designer in detached window
  - Fixed QTVSADDINBUG-875: Can't open .ui files if path has space
  - Fixed QTVSADDINBUG-887: Cannot add Qt version
  - Fixed QTVSADDINBUG-888: lupdate fails to locate source files
  - Fixed QTVSADDINBUG-890: Background build and VS2019 freeze on open solution
  - Fixed QTVSADDINBUG-898: .ts files not processed
  - Fixed QTVSADDINBUG-916: Build concurrency issues
  - Fixed QTVSADDINBUG-917: Build concurrency issues
  - Added module selection popup in Qt Settings property page
  - Optimized IntelliSense updates ("background build")
  - UI feedback of IntelliSense update, with the option to cancel background tasks
  - Context menu option to update Qt project IntelliSense information (Qt > Refresh IntelliSense)
  - Notification of available development release


Qt Visual Studio Tools version 2.7.1:

Changes
-------
  - Translation tools integrated with Qt/MSBuild
  - Qt.props property sheet accessible through the VS Property Manager window
  - Qt editors are opened in a document window inside Visual Studio
  - IntelliSense is updated on changes to .ui files
  - The Qt Options UI will be displayed as part of the standard VS 'Tools > Options' dialog
  - Added the following new fields to the Qt Options page:
      * QML debugger connection timeout
      * Path to Qt/MSBuild files
      * Enable QML debugger (overrides project settings)
      * Enable refresh of IntelliSense after build
      * Enable refresh of IntelliSense when a .ui file is changed
  - Pressing F1 will query Qt documentation
  - Fixed QTVSADDINBUG-698: Qt online help not working
  - Fixed QTVSADDINBUG-755: QML debug not working without a QRC file
  - Fixed QTVSADDINBUG-822: Incorrect generation of command line options
  - Fixed QTVSADDINBUG-825: Calls to qmake fail silently
  - Fixed QTVSADDINBUG-826: Crash in new-project wizard
  - Fixed QTVSADDINBUG-827: Command line options of Qt tools generated incorrectly
  - Fixed QTVSADDINBUG-837: Debug output cluttered with QML debugger status messages
  - Fixed QTVSADDINBUG-841: Incremental build failure
  - Fixed QTVSADDINBUG-857: Build fails due to concurrency issues


Qt Visual Studio Tools version 2.6.0:

Changes
-------
  - Support for cross-compilation with the Linux development VS workload
  - Integration of Qt for Windows deployment tool (windeployqt)
  - Fixed QTVSADDINBUG-797: Incorrect generation of command-line flags for Qt tools


Qt Visual Studio Tools version 2.5.2:

Changes
-------
  - Fixed QTVSADDINBUG-749: lupdate/lrelease options ignored
  - Fixed QTVSADDINBUG-756, QTVSADDINBUG-783: Qt tools generate files outside of project directory
  - Fixed QTVSADDINBUG-760: repc output directory not added to include path
  - Fixed QTVSADDINBUG-772, QTVSADDINBUG-777: Qt tools fail to run if path contains spaces
  - Fixed QTVSADDINBUG-780: Regression in Qt Quick compiler integration
  - Fixed QTVSADDINBUG-781: Error accessing Qt version when using non-ASCII characters in paths
  - Fixed QTVSADDINBUG-782: Incorrect build settings in the debug configuration of Qt Console apps
  - Fixed QTVSADDINBUG-785: OBJECTS_DIR ignored when importing .pro
  - Fixed QTVSADDINBUG-786: repc command line generated incorrectly
  - Fixed QTVSADDINBUG-790: Build errors when temp directory ends with .lnk
  - Fixed QTVSADDINBUG-792: Files with Q_OBJECT macro not handled correctly
  - Fixed QTVSADDINBUG-793: Backslashes in Qt version name causes error


Qt Visual Studio Tools version 2.5.1:

Changes
-------
  - Minimum supported version of VS2017 (15.8.28010.0) enforced by installer
  - Improved IntelliSense synchronization
  - Fixed QTVSADDINBUG-545: Missing support for custom installations of Qt
  - Fixed QTVSADDINBUG-771: .pro import does not replace Qt path with $(QTDIR)
  - Fixed QTVSADDINBUG-771: .pro import removes explicit reference to opengl32.lib


Qt Visual Studio Tools version 2.5.0:

Changes
-------
 - New-project wizards will now allow choice of Qt version per configuration (QTVSADDINBUG-737)
 - Added the Qt Quick Application project wizard (QTVSADDINBUG-589)
 - Renamed Qt GUI Application wizard to Qt Widgets Application (QTVSADDINBUG-589)
 - Added support for rcc two-pass mode (QTVSADDINBUG-564)
 - Fixed QTVSADDINBUG-642: Ignoring changes to VS document folder path when deploying .natvis
 - Fixed QTVSADDINBUG-643: Debug visualizer for QHash does not work with const key type
 - Fixed QTVSADDINBUG-644: Error message "Qt not configured" does not identify the project
 - Fixed QTVSADDINBUG-646: QML debugging will not work if command-line arguments are added
 - Fixed QTVSADDINBUG-647: If no Qt version is configured in VS, a generic error message is shown
 - Fixed QTVSADDINBUG-648: Importing .pro shows qmake status and error messages out-of-sync
 - Fixed QTVSADDINBUG-704: Importing .pro ignores private Qt modules
 - Fixed QTVSADDINBUG-711: Incompatibility with VS unity builds
 - Fixed QTVSADDINBUG-721: Target path for Qt properties file cannot be changed
 - Fixed QTVSADDINBUG-732: Importing .pro blindly substitutes the string 'release' in file names
 - Fixed QTVSADDINBUG-733: NDEBUG defined in Release configurations


The Qt Visual Studio Tools version 2.4.3 includes several bug fixes.

Changes
-------
 - Fixed QTVSADDINBUG-560: New Qt projects with duplicate GUID
 - Fixed QTVSADDINBUG-685: Property sheets not working with Qt projects
 - Fixed QTVSADDINBUG-690: All configs not named 'Debug' use release build settings
 - Fixed QTVSADDINBUG-702: Conversion errors when project has empty property values
 - Fixed QTVSADDINBUG-703: Pre-compiled header disabled for generated sources
 - Fixed QTVSADDINBUG-708: Link errors with projects including Windows resources (.rc file)
 - Fixed QTVSADDINBUG-709: Qt-related menu items show in non-Qt project context menu
 - Fixed QTVSADDINBUG-712: Qt INCLUDEPATH property has incorrect values
 - Fixed QTVSADDINBUG-717: Qt project build fails when multiple VS instances are launched
 - Fixed QTVSADDINBUG-722: Error getting Qt property values from generated Makefile
 - Fixed QTVSADDINBUG-723: Projects built multiple times when dependencies are defined


The Qt Visual Studio Tools version 2.4.2 includes several bug fixes.

Changes
-------
 - Fixed QTVSADDINBUG-674: Error importing .pro: "invalid character in path"
 - Fixed QTVSADDINBUG-676: Link error in project with references to other projects
 - Fixed QTVSADDINBUG-681: Error importing .pro using static build of Qt
 - Fixed QTVSADDINBUG-683: Error building with long PATH value
 - Fixed QTVSADDINBUG-684: Build error: " was unexpected
 - Fixed QTVSADDINBUG-693: Compiling sources generated by Qt tools produces unexpected .asm files
 - Fixed QTVSADDINBUG-694: Project is never up-to-date
 - Fixed QTVSADDINBUG-699: Error compiling qrc-generated sources with pre-compiled headers


The Qt Visual Studio Tools version 2.4.1 includes several bug fixes.

Rev. 12
-------
 - Fixed QTVSADDINBUG-663: Project format conversion fails due to unexpected elements in .vcxproj
 - Fixed QTVSADDINBUG-665: $(DefaultVersion) no longer works
 - Fixed QTVSADDINBUG-670: Unicode WinAPI functions called despite using multi-byte char set
 - Fixed QTVSADDINBUG-671: Error "command too long" when using static build of Qt
 - Fixed QTVSADDINBUG-672: Extension does not load in VS2019 v16.2 or earlier
 - Fixed QTVSADDINBUG-673: Intellisense is unable to locate Qt headers
 - Fixed QTVSADDINBUG-680: Build errors when using an earlier version of Qt (<= 5.7)
 - Fixed QTVSADDINBUG-682: Menu open "Qt Project Settings" opens empty dialog

Changes
-------
 - Fixed QTVSADDINBUG-391: Qt VS Tools no longer works with static builds
 - Fixed QTVSADDINBUG-496: VS crashes if no Qt version is installed
 - Fixed QTVSADDINBUG-545: No support for third-party library managers (e.g. vcpkg)
 - Fixed QTVSADDINBUG-597: Converted projects lose excluded-from-build settings
 - Fixed QTVSADDINBUG-640: Qt tools not invoked if project includes a "custom build step"
 - Fixed QTVSADDINBUG-650: Setting the QtInstall property to a path does not work
 - Fixed QTVSADDINBUG-651: The QtInstall property does not expand macros
 - Fixed QTVSADDINBUG-653: Build errors when using configuration names containing spaces
 - Fixed QTVSADDINBUG-657: Projects imported from .pro files lose reference to QtHelp module
 - Fixed QTVSADDINBUG-658: Build errors in Qt project with pre-compiled headers
 - Fixed QTVSADDINBUG-661: Selected files build: missing path to uic-generated headers


The Qt Visual Studio Tools version 2.4.0 implements Qt project settings as MSBuild properties, and
also adds support for Qt Remote Objects.

Changes
-------
 - Qt settings are now stored as fully fledged MSBuild properties (QTVSADDINBUG-575)
 - Added support for Qt Remote Objects (QTVSADDINBUG-585)
 - Fixed QTVSADDINBUG-598: Cannot export library projects to .pro files
 - Fixed QTVSADDINBUG-632: Include path out-of-sync between moc and C++ compiler


The Qt Visual Studio Tools version 2.3.2 contains several bug fixes.

Changes
-------
- Fixed QTVSADDINBUG-601: Pressing Alt-F1 crashes VS or fails to find selected documentation
- Fixed QTVSADDINBUG-608: Error in QRC compilation when paths contain spaces
- Fixed QTVSADDINBUG-609: C++ compiler output directories are not created
- Fixed QTVSADDINBUG-610: QML debug blocked when path to executable contains spaces
- Fixed QTVSADDINBUG-611: Build errors when combining RelativeDir with absolute paths in Qt tools
- Fixed QTVSADDINBUG-613: Project dependencies ignored
- Fixed QTVSADDINBUG-615: Unable to set breakpoints in .js files
- Fixed QTVSADDINBUG-618: Error when building with FIPS group policy enabled
- Will now display the version of the Qt Visual Studio Tools in the main menu (QTVSADDINBUG-607).


The Qt Visual Studio Tools version 2.3.1 adds support for Visual Studio 2019. This version also
includes fixes to bugs reported in the previous version.

Changes
-------
- Added support for Visual Studio 2019
- Extension initialization will now run in the background
- Fixed QTVSADDINBUG-583: Incorrect conversion of custom build to Qt/MSBuild
- Fixed QTVSADDINBUG-592: Custom build steps running after Qt tools and C++ compilation
- Fixed QTVSADDINBUG-593: .natvis files not installed if visualizers directory does not yet exist
- Fixed QTVSADDINBUG-594: Failed to build project with QRC files and precompiled headers
- Fixed QTVSADDINBUG-599: Debug session frozen if QML debugging is enabled
- Fixed QTVSADDINBUG-601: Pressing Alt+F1 for help on a Qt class member crashes Visual Studio
- Fixed QTVSADDINBUG-604: Conversion to Qt/MSBuild seems to freeze when errors occur


The Qt Visual Studio Tools version 2.3.0 introduces QML debugging in Visual Studio, as well as the
ahead-of-time compilation of QML files using the Qt Quick Compiler. This release also includes a
number of bug fixes.

Changes
-------
- Debug QML programs in the Visual Studio IDE
- Ahead-of-time compilation of QML files using the Qt Quick Compiler
- Fixed QTVSADDINBUG-120: Output directories (MOC_DIR, UI_DIR, RCC_DIR) in imported .pro ignored
- Fixed QTVSADDINBUG-378: Debug data visualization not working with Qt built with namespace
- Fixed QTVSADDINBUG-526: QRC not rebuilt if resources are updated
- Fixed QTVSADDINBUG-550: Standard Visual Studio macros not allowed in rcc and uic path setting
- Fixed QTVSADDINBUG-584: Compilation of selected files (i.e. 'right-click' > 'Compile') not working


The Qt Visual Studio Tools version 2.2.2 contains several bug fixes.

Changes
-------
- Fixed QTVSADDINBUG-544: Build is never up-to-date, even if no files have been changed.
- Fixed QTVSADDINBUG-551: Qt VS Tools adds a delay to Visual Studio startup.
- Fixed QTVSADDINBUG-558: Missing Qt module: Data Visualization
- Fixed QTVSADDINBUG-559: Missing Qt module: Charts
- Fixed QTVSADDINBUG-563: Error "same key already added" when converting project to Qt/MSBuild
- Fixed QTVSADDINBUG-566: Error converting to Qt/MSBuild if custom build command has a newline
- Fixed QTVSADDINBUG-569: %QTMSBUILD% environment variable always overwritten at start-up


The Qt Visual Studio Tools version 2.2.1 contains several bug fixes.

Changes
-------
- Fixed QTVSADDINBUG-509: Noticeable delays when saving any .cpp file in larger projects created
  with previous versions of the Qt VS Tools
- Fixed QTVSADDINBUG-510: Errors converting .pro files with long INCLUDEPATH definitions
- Fixed QTVSADDINBUG-511: Incorrect usage of $(IntDir) in the definition of QtWorkFilePath
- Fixed QTVSADDINBUG-512: PrecompiledHeaders.h include missing in moc after adding new class
- Fixed QTVSADDINBUG-514: Quotes removed from preprocessor definition
- Fixed QTVSADDINBUG-515: Visual Studio unresponsive while Converting custom build to Qt/MSBuild
- Fixed QTVSADDINBUG-520: Delay when starting build in solutions with many projects/configurations
- Fixed QTVSADDINBUG-521: Unable to use Qt version if it was built with -qtlibinfix
- Fixed QTVSADDINBUG-522: Duplicating defines and include paths from moc in the C++ dynamic source
- Fixed QTVSADDINBUG-523: Qt VS Tools stopped working with static builds
- Fixed QTVSADDINBUG-530: When a file includes the generated moc output for a header file as well
  as its own generated moc output then it will fail to build
- Fixed QTVSADDINBUG-531: Project not being built when a .uic or .qrc file is changed
- Fixed QTVSADDINBUG-532: Delay when continuing execution after hitting breakpoint
- Fixed QTVSADDINBUG-533: Errors in conversion to Qt/MSBuild when using MOC_DIR or the '@' option
- Fixed QTVSADDINBUG-534: Problems with inheritance of properties defined in property sheets.
- Fixed QTVSADDINBUG-535: Problems with incremental build
- Fixed QTVSADDINBUG-537: Delay after changing C++ properties in large project
- Fixed QTVSADDINBUG-538: Incorrect escaping of paths in command line strings


The Qt Visual Studio Tools version 2.2.0 is the first official release of the Visual Studio add-in
for Visual Studio 2017, 2015 and 2013.

Changes
-------
- New approach to moc, rcc and uic integration using MSBuild rules and targets
- No longer adds generated files to projects
- Creates Universal Windows projects when using a WinRT version of Qt
- Allows import of .pro files using a WinRT version of Qt
- Optimized the performance of adding header files (QTVSADDINBUG-64)
- Optimized the performance of the .pro import procedure (QTVSADDINBUG-442)
- Parallel execution of moc, rcc and uic processes (QTVSADDINBUG-124)
- Uses multi-processor compilation of C++ by default (QTVSADDINBUG-443)
- Updated list of Qt modules (QTVSADDINBUG-411)
- Fixed QTVSADDINBUG-105: moced source files are output to the same directory, prone to filename
  clashes
- Fixed QTVSADDINBUG-140: VS2012 Doesn't start-up anymore correctly after VSAddin usage.
- Fixed QTVSADDINBUG-363: When the QTDIR variable is set after the LocalDebuggerEnvironment
  variable in the users file for a project then it will not find the debugger
- Fixed QTVSADDINBUG-439: Visual Studio Addin creates bad project file if "flat" flag is removed
  from config before converting to Visual Studio project
- Fixed QTVSADDINBUG-479: Error building Qt projects in VS 2017: SDK not found
- Fixed QTVSADDINBUG-485: Microsoft.Cpp.$(Platform).user.props absent
- Fixed QTVSADDINBUG-489: When a qrc file is added to the project it is defaulting to being
  processed with -no-compress which is not the default on the command line
- Fixed QTVSADDINBUG-491: lupdate no longer works via Visual Studio Add-in
- Fixed QTVSADDINBUG-493: The application exited with an error (ExitCode 1)
- Fixed QTVSADDINBUG-504: Changing the project's Qt from Desktop to UWP causes linker errors
- Fixed QTVSADDINBUG-505: Opening a .pro file that does not contain Qt3D causes "3D module" to be
  checked in project's Qt settings


The Qt Visual Studio Tools version 2.1.2 contains support for VS 2017 and several bug fixes.

QTVSADDINBUG-459: Fix reported issues against the VS2017 beta release
QTVSADDINBUG-396: Fix new item with VS not generating the moc
QTVSADDINBUG-472: Fix opening pro file with Qt 5.9
QTVSADDINBUG-460: Fix package containing corrupted data


The Qt Visual Studio Tools version 2.1.1 contains a bug fix for QTVSADDINBUG-453

The Qt Visual Studio Tools version 2.1.0 contains improvements for QML syntax highlighting and
several bug fixes.

- Some speed improvements while importing large qmake based projects
- Better handling of $(QTDIR) environment and possible related errors
- Use TextMate language files for QML and qmake syntax highlighting (VS 2015)

- QTVSADDINBUG-445: Fix wrong usage of QT_STATIC and QT_DLL
- QTVSADDINBUG-407: Fix Environment variables are not saved/restored after VS restart


The Qt Visual Studio Tools version 2.0.0 is an update of the existing Add-In implementation
to the newer Visual Studio Package (VSIX extension) system.

Changes
-------
- Rewrite the Add-In as VSIX extension
- Known issues: Missing QML, help and localization support

The Qt Visual Studio Add-In version 1.2.5 contains an update of the Qt documentation
and some bug fixes.

Changes
-------
- Qt 5.6 help documents included.
- Fixed wrong VCProjectEngine dependency for 2012 installer, which prevented the Add-In from being
  loaded (QTVSADDINBUG-392)
- Use correct solution platform when creating projects using x64 Qt build (QTVSADDINBUG-377)
- Fixed several issues with projects' Qt modules settings (QTVSADDINBUG-344, QTVSADDINBUG-359,
  QTVSADDINBUG-388, QTVSADDINBUG-390)
- Do not overwrite debugging environment on project loading (QTVSADDINBUG-375)
- Fixed issues that prevented Qt 5.6 version from being registered to the Add-In (QTVSADDINBUG-418)

The Qt Visual Studio Add-In version 1.2.4 contains updated help
documents and a bug fixes.

Changes
-------
- Qt 5.4 help documents included.
- Fixed crash when creating new Qt5 app in VS2008 (QTVSADDINBUG-385)

The Qt Visual Studio Add-In version 1.2.3 contains support for VS2013,
updated help documents and some bug fixes.

Changes
-------
- Visual Studio 2013 support.
- Qt 5.3 help documents included.
- Handle wchar_t as builtin type, fixed. (QTVSADDINBUG-171)
- Fix for detecting wince build. (QTVSADDINBUG-176)
- Release project with debug info enabled links wrong qt dll's, fixed.(QTVSADDINBUG-350)
- Generated pri/pro files have mixed line endings (LF/CRLF), fixed.(QTVSADDINBUG-351)
- Intermediate Directory needs a trailing slash, fixed.(QTVSADDINBUG-356)

The Qt Visual Studio Add-In version 1.2.2 contains updated help documents and
two bug fixes.

Changes
-------
- Qt 5.1 help documents included.
- Incorrect overwriting of the environment setting value on every build/run
  removed. (QTVSADDINBUG-159)
- Links in Qt help not working, fixed. (QTVSADDINBUG-160)

The Qt Visual Studio Add-In version 1.2.1 contains multiple bugfixes and
improvements.

Changes
-------
- Qt 5.0.1 help documents included
- Qmake wrapper COM component removed and replaced with command line tool
  qmakefilereader to avoid need to load Qt5 library binaries to Visual Studio
  process. And to get installation of add-in easier, especially with VS2008.
- Qt4 add-in is not allowed to run same time, if found it will be closed.
  Also if Qt4 add-in is present in system, default editor values for .ts, .ui
  and .qrc file types are not permanently overwritten by Qt5 add-in. Values are
  written when Qt5 add-in loads and Qt4 values are set when Qt5 add-in unloads.
  This should make it possible to install and use both Qt4 and Qt5 versions of
  add-in. Not to use same time but in turns. Though user must be careful what he
  does.
- Recognizing Qt5 CE build. (QTVSADDINBUG-153)
- Incorrect additional directories paths set when Qt modules added/removed from
  Qt Project Settings page. (QTVSADDINBUG-151)
- Include directories search path for some Qt modules fixed (QTVSADDINBUG-150)
- Invalid Qt module names fixed (QTVSADDINBUG-142)
- Crash when importing .pri file fixed (QTVSADDINBUG-139)
- Qt default settings saving problem fixed (QTVSADDINBUG-137)
- Naming of precompiled header fixed (QTVSADDINBUG-132)
- Support for debugger visualizers in VS2012 (QTVSADDINBUG-129)
- Setting Qt libraries path for debugging session fixed (QTVSADDINBUG-125)

The Qt Visual Studio Add-In version 1.2.0 supports Qt 5.0.

Changes
-------
- Parameter passing to lupdate fixed (QTVSADDINBUG-131)
- Project creation wizards updated to follow Qt5 module structure
- Project settings form updated to follow Qt5 module structure
- Help documents updated to Qt5
- No more Qt4 project creation wizards and project settings
- Support for Visual Studio 2012
- All project files (*.sln, *.csproj etc) are renamed to Qt5

The Qt Visual Studio Add-In version 1.1.11 contains multiple bugfixes and
improvements.

Changes
-------
- Documentation updated
- Documentation support for Visual Studio 2010. (QTVSADDINBUG-15)
- Fixed always moc'ing problem. (QTVSADDINBUG-92)
- Fixed .pro file opening having include to "." path. (QTVSADDINBUG-117)
- Removed extra back slashes from qmake arg paths.
- Fixed some additional include dir handling causing same path to be added multiple times to custom
  build step.

The Qt Visual Studio Add-In version 1.1.10 contains multiple bugfixes and
improvements.

Changes
-------
- Be aware of comments when parsing qmake.conf. (QTVSADDINBUG-76)
- Fixed exception when using using unsupported lupdate parameters. (QTVSADDINGBUG-70)
- Detecting the MSVC version from qmake.conf was fixed.
- Added QtScriptTools and QtUiTools to project settings. (QTVSADDINBUG-71)
- Removed the MSVC version check when adding Qt versions. As this "feature" seems to cause more
  trouble than it solves, we decided to remove it. Checking for the makefile generator should at
  least prevent people from trying to add MinGW builds.
- Fixed creation of addin projects from 64 bit Qt qmake projects.
- Do not add the include path "$QTDIR/include/qtmain".
  This path is a relict and confuses IntelliSense. (QTVSADDINBUG-81)
- Be aware of strings when looking for Q_OBJECT macros. (QTVSADDINBUG-75)
- Fix problems with the debugging environment. (QTVSADDINBUG-93)
- Pass correct QtDesigner4.lib library name to linker. (QTVSADDINBUG-85)
- Fix cleaning of autoexp.dat on uninstallation for VS 2005. (QTVSADDINBUG-67)
- Use slashes as path separators in includes in moc files. (QTVSADDINBUG-84)
- Choose a valid Qt version if the default Qt version becomes invalid. (QTVSADDINBUG-60)
- Prevent infinite loop if QtAppWrapper cannot connect. (QTVSADDINBUG-73)
- Add and remove the correct OpenGL libraries when changing project's Qt version. (QTVSADDINBUG-80)
- Use project macro for filenames in moc step. (QTVSADDINBUG-30)
- Fixed batch builds of Qt projects for multiple platforms. (QTVSADDINBUG-51)

The Qt Visual Studio Add-In version 1.1.9 contains multiple bugfixes and
improvements.

Changes
-------
- Fix a regression when importing .pro files that was introduced in 1.1.8.
- Make the add-in work with Intel VTune projects. (QTVSADDINBUG-65)
- Check for compatibility with VS version when adding new Qt version. This will hopefully stop
  people from trying to use a MinGW Qt build with Visual Studio. (QTVSADDINBUG-58)
- Added possiblity to specifiy lupdate/lrelease options. (QTVSADDINBUG-48)

The Qt Visual Studio Add-In version 1.1.8 contains multiple bugfixes and
improvements.

Changes
-------
- Do not save the QTDIR in a property sheet for VS 2010. (QTVSADDINBUG-12)
- QtDeclarative module added to the modules page and wizards. (QTVSADDINBUG-44)
- Fix import of .pri files. (QTVSADDINBUG-38)
- Save the modified generated .vc(x)proj after .pro file import. (QTVSADDINBUG-40)
- Proper handling of moc file exclusion when saving cpp files. (QTVSADDINBUG-33)
- Remove user macro from property sheed when $(QTDIR) is used in VS2010. (QTVSADDINBUG-12)
- Documented possibility to add $(QTDIR) version. (QTVSADDINGBUG-19)
- Fix broken include paths in moc calls for VS 2010. (QTVSADDINBUG-34)
- Fix import of previously unloaded projects. (QTVSADDINBUG-31)
- Preserve line breaks in custom build steps after import. (QTVSADDINBUG-32)
- Fix exception that could be raised when changing the Qt version of solutions that contained
  non-C++ projects. (QTVSADDINBUG-50)
- Fix moc command line creation for include paths that contain whitespace
  characters. (QTVSADDINBUG-53)
- Fixed the Windows CE wizards that stopped working under certain circumstances. (QTVSADDINBUG-42)
- Several fixes for Windows CE project generation.
- Qt 4.7.2 documentation included.

The Qt Visual Studio Add-In version 1.1.7 contains multiple bugfixes and
improvements.

Changes
-------
- Fix import of .pro files with "CONFIG -= flat". (QTVSADDINBUG-10)
- Fix naming of classes in generated .ui files. (QTVSADDINBUG-9)
- Visualizers for QPolygon and QPolygonF fixed. (QTVSADDINBUG-8)
- Fix expanding filters on build.
- Fix Qt 4.7 qmake warning wrt backslash escaping on import.
- VS2010: fix AddMocStep for new header files. (QTVSADDINBUG-2)
- GUI class wizard: fix .ui file overwriting check. (QTVSADDINBUG-3)
- When adding moc step, do not assume that cpp file is present. (QTVSADDINBUG-1)

The Qt Visual Studio Add-In version 1.1.6 contains multiple bugfixes and
improvements.

Changes
-------
- Fixed collapse of Generated files after import/build on Visual Studio
2005. (QTBUG-4750)
- Support for Visual Studio 2010. (QTBUG-5374)
- Added check for invalid variables in Rcc/Uic directories in Qt (project) settings. (QTBUG-6818)
- Updated documentation for changing the target platform. (QTBUG-7262)
- Translate filter names on .pro file import or when switching from a qmake generated
  (qmake -tp vc) project to an Add-in project. (QTBUG-11325)
- Fixed regression in custom build step generation. (QTBUG-11527)
- Fixed "Change Solution's Qt version" for solutions that contain Intel Fortran
  projects. (QTBUG-11567)
- Fix output paths for custom build steps in release configuration. (QTBUG-12145)
- Fix import if CONFIG contains "silent". (QTBUG-12344)
- Phonon is added automatically if WebKit is selected. (QTBUG-10154)
- Fixed display of uninitialized QSet and QHash object. (QTBUG-12890)

The Qt Visual Studio Add-In version 1.1.5 contains multiple bugfixes and
improvements.

Changes
-------
- Fixed setting of preprocessor definitions when changing to a Windows CE Qt version. (QTBUG-10564)
- Added contribution for QMap visualization. (QTBUG-3970)
- Recursively look for includes/defines in PropertySheets. (QTBUG-10406)
- Fixed bugs affecting Q_OBJECTs in .cpp files.
- On import, the content of .qrc files is added to the Resources filter of the Visual Studio
  project. (QTBUG-10113)
- QRC Editor: The add-in will synchronize the list of resources in a .qrc file with the files in
  the Resources filter of the project.  (QTBUG-6103)
- QRC Editor: show full resource URL. (QTBUG-3801)
- Refresh moc steps when PCH options are changed. (QTBUG-7700)
- You don't have to be admin anymore to set Windows CE Qt versions. (QTBUG-9550)
- QtAppWrapper: Do not stop listening to new connections if error occurs. (QTBUG-8508)
- Handle C++ comments correctly. (QTBUG-7641)
- Support $(PlatformName) for moc, uic and rcc directories. (QTBUG-5814)
- Fixed exception when exporting non-C++ projects. (QTBUG-9234)
- Fixed module handling for static libraries. (QTBUG-8670)
- Resolve %BASECLASS% in Qt4Class template again, to keep old custom class wizard additions
  working. (QTBUG-8615)
- Fixed wrong DLL names in Windows CE deployment of Qt modules. (QTBUG-8622)
- Fixed import of .pro files with library dependency paths that contain whitespace
  characters. (QTBUG-8493)
- Added possibility to use mocDir without $(ConfigurationName). (QTBUG-7288)
- Fixed import for projects with relative moc dir settings. (QTBUG-8372)
- Fixed import for project without resources.
- Don't depend on .NET Framework 3.5 SP1. (QTBUG-8415)
- Fix moc steps for file names, that are contain substrings of variables,
  like "Config.h" (QTBUG-8218)
- Detection of invalid class names in projects wizards. (QTBUG-8154)
- Fixed creation of translation files when custom cultures are present. (QTBUG-11124)

The Qt Visual Studio Add-In version 1.1.4 contains multiple bugfixes and
improvements.

Changes
-------
- Several bugs when opening .ui and .ts files have been fixed. The qtappwrapper has been
  overhauled. (QTBUG-6857, QTBUG-7491)
- Importing .pro files with source files in subdirectories does not longer cause creation of
  invalid moc steps. (QTBUG-7603)
- The Qt Multimedia module is now available in all project wizards and the Qt modules
  dialog. (QTBUG-7487)
- The "Generated Files" filter is collapsed after .pro file import. (QTBUG-7687)
- Automatically checkout .ui, .qrc and .ts files if they are under source control. (QTBUG-7680)
- Remove .res files from the "Generated Files" filter after .pro file import as
  they are not needed. (QTBUG-7494)
- Class wizards: Take care of forbidden characters when building include guards for
  header files. (QTBUG-7811)
- Fix exception when accessing the Qt project settings for projects, that do not have
  a compiler tool. (QTBUG-7930)
- Fix bug in moc step update, which occured when there was more than one file in
  the "Outputs" property of the custom build step. (QTBUG-7937)
- Added an option to turn off the automatic moc steps update. (QTBUG-7938)

The Qt Visual Studio Add-In version 1.1.3 contains multiple bugfixes and
improvements.

Changes
-------
- Added checks to avoid unneeded access to .vcproj file when saving files
  with Q_OBJECT. (QTBUG-5813)
- When using Visual Studio 2005 the project tree is no longer expanded
  after each build. (QTBUG-6482)
- Switching between qmake and AddIn projects more robust. (QTBUG-6434)
- Set target machine explicitly when changing Qt version. (QTBUG-5206)
- Work around Visual Studio bug to support the simplified Chinese
  version of Visual Studio.  (QTBUG-6318)
- Fixed bug for Windows CE static builds. (QTBUG-3493)
- Create signature step for Windows CE projects. (QTBUG-3493)
- Fixed visualizers for QList and QMap. (very simple version for QMap as
  an appropiate visualization seems impossible in autoexp.dat) (QTBUG-660
  and QTBUG-3970)
- Fixed visualizers for QVector. (QTBUG-7121)
- Support empty base classes in Qt4Class wizard. (QTBUG-6797)
- Support namespaces when creating Qt classes. (QTBUG-5227)

The Qt Visual Studio Add-In version 1.1.2 contains multiple bugfixes and
improvements.

Changes
-------
- Fixed various problems concerning precompiled headers (stdafx as default
  (QTBUG-5226), change of settings when building...)
- Increased support for solution folders (QTBUG-4914)
- Detection of solution .pro files fixed (be aware of possible newline
  after \)
- Fixed bug, which could appear when moc steps had to be updated.
  The update caused an invalid moc commandline which made the build fail.
- Added support for Q_Gadget macro(QTBUG-5291)
- Project tree is not expanded on every build when using VS2005 (QTBUG-5291)
- Fixed conversion from AddIn project to Qmake project and vice
  versa (QTBUG5380)
- Repair moc path when importing .pro file (QTBUG-4221)
- Support of commandline builds (QTBUG-5321)
  (In VS2005 there are some issues when trying to load AddIns from the
  commandline. See http://support.microsoft.com/kb/934517)

The Qt Visual Studio Add-In version 1.1.1 contains multiple bugfixes and
improvements.

Changes
-------
- Fixed startup of Qt Designer and Qt Linguist when the application was
  not build for the current project's Qt Version. The Add-In tries to find
  the needed tool inside the directory of the other registered Qt Versions.
- "Generate basic pro file" gets disabled in project's context menu and Qt
  menu if the current project is a qmake generated project.
- When importing a solution file while a solution is opened, the user gets
  the possibility to automatically close the current solution.
- Avoid infinite recursion in inclusion which happened when moccing .cpp
  files, which used precompiled headers.
- Translation files are added when exporting project to a .pri file.
- Project is cleaned, when its Qt version is changed.
- As there is no way to avoid the expansion of generated files filter when
  the project is built the first time, the generated files are collapsed
  after the build has finished (QTBUG-4750).
- Changing the project's Qt Version after importing a .pro file does not
  longer make the build fail (QTBUG-4756)
- Exclusion of .cpp and .h files cause the mocced files to be excluded from
  build too (QTBUG-3404)
- Adding a Qt class no longer implies that precompiled headers are used.
- Fixed processing of lupdate in projects with a big amount of files
(QTBUG-4783).

The Qt Visual Studio Add-In version 1.1.0 contains multiple bugfixes and
improvements.

Changes
-------
- The custom build step generation has been changed to use a subfolder for
  every configuration. This solves the problem of heavy changes in the vcproj
  file whenever the user switches to another build configuration. (Task 251918)
- Qt Designer, Qt Linguist and the QRC Editor are started via a properly
  registered editor wrapper. Now its possible to open ui files in other
  editors, like the built-in XML editor. (Task 250601)
- Projects can be converted from Qt Add-in projects to qmake generated
  projects and back. (Task 153484)
- Fixing the behaviour of adding a file to a filter. (Task 254968)
- Opening a vcproj file that has a non-defined Qt version works now like in
  the old Qt VS integration. (Task 258704)
- The detection of Windows CE Qt builds has been fixed.
- OpenGL Desktop Windows libraries aren't added to linker options in
  Windows CE projects. (Task 260550)
- If there's no Generated Files folder, then we don't try to delete its
  content. (Task 260723)
- Fix bug for solutions that contain disabled (unloaded) projects. (Task 259807)
- Switching between static and dynamic Qt builds has been fixed.
- Add-in's documentation has been updated.

The Qt Visual Studio Add-In version 1.0.2 contains multiple bugfixes.

Changes
-------
- Platform was not set correctly when solution contains several projects.
- Repair broken QTDIR Variable when project is added to solution.
- Fix problem with dots in pro file names.
- Qt module Phonon added to wizards and dialogs.
- Don't mess around with whitespaces in every source file we add. (Task  251987)
- Prevent duplicates in additional dependencies, includes etc.
- Fix rare exception when importing solution pro file.
- Fix switching between static and dynamic Qt build.
- Enable the user to add a "$(QTDIR)" Qt version even if QTDIR is not set.

The Qt Visual Studio Add-In version 1.0.1 contains multiple bugfixes.

Changes
-------
- Qt .pro file import fixed for projects containing SUBDIRS.
- Fixed moc file build exclusion when saving a .cpp file.
- Keep user defined debugging environment when adding the Qt environment.
- Fix the display of full file paths in custom build tool descriptions.
- Documentation updated.

